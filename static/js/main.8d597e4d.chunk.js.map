{"version":3,"sources":["components/Navbar.js","components/Difficulty.js","components/Question.js","components/StartButton.js","components/OperateSection.js","components/QuestionBox.js","components/scorebox.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","Difficulty","difficulty_level","set_difficulty","onClick","className","console","log","Question","question","options","set_option","key","update_option_list","set","opt","name","StartButton","start_quiz","OperateSection","i","all_done","next_question","calculate","set_done","id","parseInt","QuestionBox","state","setState","start","filters","difficulty","String","props","toLowerCase","fetch","then","data","json","response","questionList","results","update_correct_answer_list","correct_answer","value","option","q","fix_string","bind","s","replaceAll","this","length","incorrect_answers","push","Component","Scorebox","score","App","useState","option_list","set_option_list","correct_answer_list","set_answer","done","set_score","update_score","a","includes","level","new_option","new_answer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4ZAaeA,EAVF,WACT,OACI,mCACA,8BACA,8C,MCsBOC,MA1Bf,YAAwD,IAAnCC,EAAkC,EAAlCA,iBAAiBC,EAAiB,EAAjBA,eAclC,OACI,mCACI,+BACI,oBAAIC,QAfC,WACbD,EAAeD,EAAmB,SAcHG,UAA8B,QAAlBH,EAA0B,WAAW,GAAxE,kBACA,oBAAIE,QAZC,SAACF,GACdC,EAAgC,WAWCE,UAA8B,UAAlBH,EAA4B,WAAW,GAA5E,oBACA,oBAAIE,QATD,WACXD,EAAeD,EAAiB,SAQDG,UAA8B,QAAlBH,EAA0B,WAAW,GAAxE,kBACCI,QAAQC,IAAIL,S,6DCAdM,MApBf,YAAwE,IAArDC,EAAoD,EAApDA,SAASC,EAA2C,EAA3CA,QAAYC,GAA+B,EAAnCC,IAAmC,EAA/BD,YAAWE,EAAoB,EAApBA,mBAEzCC,EAAI,SAACC,GACPJ,EAAWI,GACXF,EAAmBE,IAGvB,OACI,qCACI,qBAAKV,UAAU,0BAAf,SAA0C,MAAMI,IAChD,sBAAKJ,UAAU,iCAAf,UACI,wBAAQW,KAAK,SAASZ,QAAS,WAAKU,EAAIJ,EAAQ,KAAML,UAAU,SAAhE,SAA0EK,EAAQ,KAClF,wBAAQM,KAAK,SAASZ,QAAS,WAAKU,EAAIJ,EAAQ,KAAML,UAAU,SAAhE,SAA0EK,EAAQ,KAClF,wBAAQM,KAAK,SAASZ,QAAS,WAAKU,EAAIJ,EAAQ,KAAML,UAAU,SAAhE,SAA0EK,EAAQ,KAClF,wBAAQM,KAAK,SAASZ,QAAS,WAAKU,EAAIJ,EAAQ,KAAML,UAAU,SAAhE,SAA0EK,EAAQ,Y,MCJnFO,MAVf,YAA4C,IAAtBb,EAAqB,EAArBA,QAASc,EAAY,EAAZA,WAC3B,OACI,mCACA,qBAAKb,UAAW,kBAAkBa,EAAW,wCAAwC,IAArF,SACI,wBAAQb,UAAU,eAAeD,QAASA,EAA1C,wB,MCaGe,MAhBf,YAAwE,IAA9CC,EAA6C,EAA7CA,EAAEC,EAA2C,EAA3CA,SAASC,EAAkC,EAAlCA,cAAcC,EAAoB,EAApBA,UAE/C,OAFmE,EAAVC,SAGrD,mCACI,sBAAKnB,UAAU,kBAAf,UACI,wBAAQA,UAAU,UAAUoB,GAAG,SAASrB,QAAS,WAC7CE,QAAQC,IAAI,cACZgB,KAFJ,oBAIA,sBAAMlB,UAAU,iBAAhB,SAAkC,cAAcqB,SAASN,GAAG,GAAG,QAC/D,wBAAQf,UAAW,YAAYgB,EAAS,WAAW,IAAKI,GAAG,OAAOrB,QAAS,WAAKkB,KAAhF,wBCsFDK,G,wDA5FX,aAAc,IAAD,8BACT,gBAuBJL,cAAc,WACP,EAAKM,MAAMR,EAAE,GACZ,EAAKS,SAAS,CAACT,EAAG,EAAKQ,MAAMR,EAAE,IAElB,GAAd,EAAKQ,MAAMR,GACV,EAAKS,SAAS,CAACR,UAAS,KA7BnB,EAkCbH,WAAW,WACP,EAAKW,SAAS,CAACC,OAAM,IAGrB,IAAMC,EAAU,CACZC,WAAYC,OAAO,EAAKC,MAAMF,YAAYG,eAI9CC,MAAM,kEAAD,OAAmEL,EAAQC,aAC/EK,MAAK,SAAAC,GAAI,OAAEA,EAAKC,UAChBF,MAAK,SAACG,GACH,EAAKX,SAAS,CAACY,aAAaD,EAASE,UADvB,oBAED,EAAKd,MAAMa,cAFV,IAEd,IAAI,EAAJ,qBAAqC,CAAC,IAA9BrB,EAA6B,QACjC,EAAKc,MAAMS,2BAA2BvB,EAAEwB,iBAH9B,mCA7CT,EAsDbjC,WAAW,SAACkC,GACR,EAAKjB,MAAMkB,OAAOD,GArDlB,EAAKjB,MAAM,CACPa,aAAa,GACbM,EAAE,GACF3B,EAAE,EACFC,UAAS,EACTS,OAAM,EACNgB,OAAO,IAEX,EAAKE,WAAW,EAAKA,WAAWC,KAAhB,gBAChB,EAAK3B,cAAc,EAAKA,cAAc2B,KAAnB,gBACnB,EAAK/B,WAAW,EAAKA,WAAW+B,KAAhB,gBAChB,EAAKtC,WAAW,EAAKA,WAAWsC,KAAhB,gBAbP,E,8CAiBb,SAAWC,GAIP,OAHAA,EAAEC,WAAW,SAAS,KACtBD,EAAEC,WAAW,YAAY,KACzBD,EAAEC,WAAW,aAAa,KACnBD,I,oBAsCX,WACI,OACQ,mCACI,qBAAK7C,UAAU,mDAAf,SAEI+C,KAAKxB,MAAME,MACP,qCAAE,8BAEIsB,KAAKxB,MAAMa,aAAaY,OAAO,EAC5B,wBAAC,EAAD,yBACG5C,SAAU2C,KAAKJ,WAAWf,OAAOmB,KAAKxB,MAAMa,aAAaW,KAAKxB,MAAMR,GAAGX,YAEnE2C,KAAKxB,MAAMa,aAAaW,KAAKxB,MAAMR,GAAGkC,kBACtCC,KAAKH,KAAKxB,MAAMa,aAAaW,KAAKxB,MAAMR,GAAGwB,iBAJlD,IAMGlC,QAAS0C,KAAKxB,MAAMa,aAAaW,KAAKxB,MAAMR,GAAGkC,kBAC/C1C,IAAKwC,KAAKxB,MAAMR,EAChBT,WAAYyC,KAAKzC,WACjBE,mBAAoBuC,KAAKlB,MAAMrB,sBAElC,KAGT,cAAC,EAAD,CAAgBO,EAAGgC,KAAKxB,MAAMR,EAAGC,SAAU+B,KAAKxB,MAAMP,SAAUC,cAAe8B,KAAK9B,cAAeC,UAAW6B,KAAKlB,MAAMX,UAAWC,SAAU4B,KAAKlB,MAAMV,cAE5J,cAAC,EAAD,CAAaN,WAAYkC,KAAKxB,MAAME,MAAO1B,QAASgD,KAAKlC,qB,GArFxDsC,c,MCiBXC,MArBf,YAA4B,IAATC,EAAQ,EAARA,MAEf,OACI,mCACI,sBAAKrD,UAAU,kBAAf,UACI,+CAAkBqD,EAAlB,SACA,4BAAW,IAAPA,EACA,oCACAA,EAAM,EACF,aACAA,EAAM,EAAN,6CAEI,gBCuCbC,MA/Cf,WACI,MAAgCC,mBAAS,QAAzC,mBAAK5B,EAAL,KAAgB7B,EAAhB,KACA,EAAkCyD,mBAAS,IAA3C,mBAAKC,EAAL,KAAiBC,EAAjB,KACA,EAAqCF,mBAAS,IAA9C,mBAAKG,EAAL,KAAyBC,EAAzB,KACA,EAAoBJ,oBAAS,GAA7B,mBAAKK,EAAL,KAAUzC,EAAV,KACA,EAAsBoC,mBAAS,GAA/B,mBAAKF,EAAL,KAAWQ,EAAX,KAUIC,EAAY,uCAAE,sBAAAC,EAAA,sDAChBF,EAAUR,GAAY,GADN,2CAAF,qDAIZnC,EAAS,uCAAE,4BAAA6C,EAAA,sDACX9D,QAAQC,IAAIsD,GACZvD,QAAQC,IAAIwD,GACJ3C,EAAE,EAHC,YAGCA,EAAEyC,EAAYR,QAHf,qBAINU,EAAoBM,SAASR,EAAYzC,IAJnC,gCAKD+C,IALC,OAGsB/C,IAHtB,uBAQRsC,EAAM,IACPQ,EAAUR,EAAM,IAElBlC,GAAS,GAXE,4CAAF,qDAcb,OACE,qCACE,cAAC,EAAD,CAAQ8C,MAAOtC,IACf,qBAAK3B,UAAU,wDAAf,SACE,cAAC,EAAD,CAAYH,iBAAkB8B,EAAY7B,eAAgBA,MAE1D8D,EAED,cAAC,EAAD,CAAUP,MAAOA,IADlB,cAAC,EAAD,CAAa1B,WAAYA,EAAYnB,mBAjClB,SAAC0D,GACtBT,EAAgB,GAAD,mBAAKD,GAAL,CAAiBU,MAgC+C5B,2BA7BlD,SAAC6B,GAC9BR,EAAW,GAAD,mBAAKD,GAAL,CAAyBS,MA4BoGhD,SAAUA,EAAUD,UAAWA,QCnC7JkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8d597e4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../static/navbar.css';\r\n\r\nconst Navbar=()=>{\r\n    return(\r\n        <>\r\n        <nav>\r\n        <p>Quiz-Bee</p>\r\n        </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport '../static/difficulty.css';\r\n\r\nfunction Difficulty({difficulty_level,set_difficulty}) {\r\n\r\n    const set_easy = () => {\r\n        set_difficulty(difficulty_level = 'Easy')\r\n    }\r\n\r\n    const set_medium=(difficulty_level)=>{\r\n        set_difficulty(difficulty_level='Medium');\r\n    }\r\n\r\n    const set_hard=()=>{\r\n        set_difficulty(difficulty_level='Hard')\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <ul>\r\n                <li onClick={set_easy} className={(difficulty_level=='Easy')?'selected':''} >Easy</li>\r\n                <li onClick={set_medium} className={(difficulty_level=='Medium')?'selected':''}>Medium</li>\r\n                <li onClick={set_hard} className={(difficulty_level=='Hard')?'selected':''}>Hard</li>\r\n                {console.log(difficulty_level)}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Difficulty;","import React from 'react';\r\nimport '../static/question.css'\r\n\r\nfunction Question({question,options,key,set_option,update_option_list}){\r\n\r\n    const set=(opt)=>{\r\n        set_option(opt)\r\n        update_option_list(opt)\r\n    }\r\n\r\n    return(\r\n        <>       \r\n            <div className=\"question slide-in-right\">{\"Q. \"+question}</div>\r\n            <div className=\"options-section slide-in-right\">\r\n                <button name=\"option\" onClick={()=>{set(options[0])}} className=\"option\">{options[0]}</button>\r\n                <button name=\"option\" onClick={()=>{set(options[1])}} className=\"option\">{options[1]}</button>\r\n                <button name=\"option\" onClick={()=>{set(options[2])}} className=\"option\">{options[2]}</button>\r\n                <button name=\"option\" onClick={()=>{set(options[3])}} className=\"option\">{options[3]}</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Question;","import React from 'react'\r\nimport '../static/start-button.css'\r\n\r\nfunction StartButton({onClick, start_quiz}){\r\n    return(\r\n        <>\r\n        <div className={\"start-section \"+(start_quiz?'animate_animated animate__bounceOutUp':'')} >\r\n            <button className=\"start-button\" onClick={onClick}>START</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StartButton;","import React from 'react'\r\nimport '../static/operate-section.css'\r\n\r\n\r\nfunction OperateSection ({i,all_done,next_question,calculate,set_done}){\r\n\r\n    return(\r\n        <>\r\n            <div className=\"operate-section\">\r\n                <button className=\"operate\" id=\"submit\" onClick={()=>{\r\n                    console.log(\"Submitting\")\r\n                    calculate()\r\n                }}>Submit</button>\r\n                <span className=\"questionNumber\">{\"Question: \"+(parseInt(i)+1)+\"/10\"}</span>\r\n                <button className={\"operate \"+(all_done?\"all-done\":'')} id=\"next\" onClick={()=>{next_question()}}>Next</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OperateSection;","import React,{Component} from 'react';\r\nimport { useState } from 'react';\r\nimport Question from './Question'\r\nimport StartButton from './StartButton'\r\nimport OperateSection from './OperateSection'\r\nimport '../static/question-box.css'\r\n\r\nclass QuestionBox extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            questionList:[],\r\n            q:\"\",\r\n            i:0,\r\n            all_done:false,\r\n            start:false,\r\n            option:\"\"\r\n        };\r\n        this.fix_string=this.fix_string.bind(this)\r\n        this.next_question=this.next_question.bind(this)\r\n        this.start_quiz=this.start_quiz.bind(this)\r\n        this.set_option=this.set_option.bind(this)\r\n    }\r\n\r\n    /*Function to fix the string*/\r\n    fix_string(s){\r\n        s.replaceAll(\"&quot;\",'\"')\r\n        s.replaceAll(/(&amp\\;)/g,'&');\r\n        s.replaceAll(/(&#039\\;)/g,\"'\");\r\n        return s;\r\n    };\r\n\r\n    next_question=()=>{\r\n        if(this.state.i<9){\r\n            this.setState({i:(this.state.i+1)})\r\n        }\r\n        if(this.state.i==8){\r\n            this.setState({all_done:true})\r\n        }\r\n    }\r\n\r\n    /*Start button to begin the quiz*/\r\n    start_quiz=()=>{\r\n        this.setState({start:true})\r\n\r\n        /*Different parameters based on user's choice*/\r\n        const filters = {\r\n            difficulty: String(this.props.difficulty).toLowerCase(),\r\n        };\r\n\r\n        /*Couldn't use POST using params due to CORS Error :(*/\r\n        fetch(`https://opentdb.com/api.php?type=multiple&amount=10&difficulty=${filters.difficulty}`)\r\n        .then(data=>data.json())\r\n        .then((response)=>{\r\n            this.setState({questionList:response.results});\r\n            for(let i of this.state.questionList){\r\n                this.props.update_correct_answer_list(i.correct_answer)\r\n        }\r\n        });\r\n        \r\n    }\r\n\r\n    set_option=(value)=>{\r\n        this.state.option=value\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n                <>\r\n                    <div className=\"question-box animate__animated animate__backInUp\">\r\n                    {\r\n                        this.state.start?    \r\n                            <><div>\r\n                                {/* Adding each question on clicking next  */}\r\n                                {(this.state.questionList.length>0)\r\n                                    ?<Question \r\n                                        question={this.fix_string(String(this.state.questionList[this.state.i].question))} \r\n\r\n                                        {...this.state.questionList[this.state.i].incorrect_answers.\r\n                                            push(this.state.questionList[this.state.i].correct_answer)}\r\n\r\n                                        options={this.state.questionList[this.state.i].incorrect_answers}\r\n                                        key={this.state.i}\r\n                                        set_option={this.set_option}\r\n                                        update_option_list={this.props.update_option_list}\r\n                                        />\r\n                                    :''\r\n                                }\r\n                            </div>\r\n                            <OperateSection i={this.state.i} all_done={this.state.all_done} next_question={this.next_question} calculate={this.props.calculate} set_done={this.props.set_done}/>\r\n                            </>\r\n                        :<StartButton start_quiz={this.state.start} onClick={this.start_quiz}/>\r\n                    }\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n}\r\n\r\nexport default QuestionBox;","import React from 'react'\r\nimport '../static/scorebox.css'\r\n\r\nfunction Scorebox({score}) {\r\n\r\n    return(\r\n        <>\r\n            <div className=\"score-container\">\r\n                <p>Your score is {score}/10</p>\r\n                <p>{score==10?\r\n                    'You googled the questions, right?':\r\n                    score>5?\r\n                        \"Well Done!\":\r\n                        score>0?\r\n                            `You seriously need to work on your skills!`:\r\n                            \"LMAO!\"\r\n                    \r\n                }</p>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Scorebox;","import './static/App.css';\r\nimport {useState} from 'react'\r\nimport Navbar from './components/Navbar'\r\nimport Difficulty from './components/Difficulty'\r\nimport QuestionBox from './components/QuestionBox'\r\nimport Scorebox from './components/scorebox'\r\n\r\nfunction App() {\r\n    let [difficulty,set_difficulty]=useState('Easy')\r\n    let [option_list,set_option_list]=useState([])\r\n    let [correct_answer_list,set_answer]=useState([])\r\n    let [done,set_done]=useState(false)\r\n    let [score,set_score]=useState(0)\r\n\r\n    let update_option_list=(new_option)=>{\r\n      set_option_list([...option_list,new_option])\r\n    }\r\n\r\n    let update_correct_answer_list=(new_answer)=>{\r\n      set_answer([...correct_answer_list,new_answer])\r\n    }\r\n\r\n    let update_score= async ()=>{\r\n      set_score(score=score+1)\r\n    }\r\n\r\n    let calculate= async ()=>{\r\n        console.log(option_list)\r\n        console.log(correct_answer_list)\r\n        for(let i=0;i<option_list.length;i++){\r\n          if(correct_answer_list.includes(option_list[i])){\r\n            await update_score()\r\n          }\r\n        }\r\n        if(score>10){\r\n          set_score(score=10)\r\n        }\r\n        set_done(true)\r\n  }\r\n\r\n    return (\r\n      <>\r\n        <Navbar level={difficulty}/>\r\n        <div className=\"difficulty-section animate_animated animate__backInUp\">\r\n          <Difficulty difficulty_level={difficulty} set_difficulty={set_difficulty}/>\r\n        </div>\r\n        {!done?\r\n        <QuestionBox difficulty={difficulty} update_option_list={update_option_list} update_correct_answer_list={update_correct_answer_list} set_done={set_done} calculate={calculate}/>\r\n        :<Scorebox score={score}></Scorebox>\r\n        }\r\n      </>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './static/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}